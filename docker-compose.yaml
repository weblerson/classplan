version: "3"

services:
  backend:
    container_name: app-backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - .env
    volumes:
      - ./backend/:/app
      - ./backend/staticfiles:/app/staticfiles
      - ./backend/media:/app/media
    command: >
      sh -c "python3.11 manage.py migrate &&
             gunicorn core.wsgi:application --bind 0.0.0.0:8000"
    depends_on:
      db:
        condition: service_healthy
      tests:
        condition: service_completed_successfully
    ports:
      - "8000:8000"

  tests:
    container_name: tests
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - .env
    volumes:
      - ./backend/:/app
      - ./backend/staticfiles:/app/staticfiles
      - ./backend/media:/app/media
    command: python3.11 manage.py test
    depends_on:
      db:
        condition: service_healthy

  db:
    container_name: database
    image: postgres:alpine
    volumes:
      - ./django-db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U lerson" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"

  frontend:
    container_name: app-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend/app:/app
      - ./backend/staticfiles:/app/staticfiles
      - ./backend/media:/app/media
    depends_on:
      - backend
    ports:
      - "80:5173"